{"pageProps":{"id":"22","title":"Object.create and Object.assign","datetime":"2017-07-10T13:42:37.449Z","summary":"先看一下#Object.create 和#Object.assign 在#MDN 的說明：\n\n>The Object.create() method creates a new object with","content":"<p>先看一下#Object.create 和#Object.assign 在#MDN 的說明：</p>\n<blockquote>\n<p>The Object.create() method creates a new object with the specified prototype object and properties.</p>\n<p>Syntax: Object.create(proto[, propertiesObject])</p>\n<p>— <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\">Object.create() MDN</a></p>\n<p>The Object.assign() method is used to copy the values of all enumerable own properties from one or more source objects to a target object. It will return the target object.</p>\n<p>Syntax: Object.assign(target, …sources)</p>\n<p>— <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\">Object.assign() MDN</a></p>\n</blockquote>\n<p>換句話說就是</p>\n<ul>\n<li>Object.create可以用來建立有特定#prototype 的#物件</li>\n<li>Object.assign可以用來複製多個物件的屬性到目標物件</li>\n</ul>\n<pre><code class=\"language-js\">var car = {\n  wheel: 3,\n  speed: () => console.log('fast')\n}\n\nvar car1 = Object.create(car)\nvar car2 = Object.create(car)\nvar car3 = Object.assign({}, car)\nvar car4 = Object.assign(car)\n\ncar1.speed()  // fast\ncar2.speed()  // fast\ncar3.speed()  // fast\ncar4.speed()  // fast\nconsole.log(car1) // {__proto__: {speed: (), wheel: 3}}\nconsole.log(car2) // {__proto__: {speed: (), wheel: 3}}\nconsole.log(car3) // {wheel: 3}\nconsole.log(car4) // {wheel: 3}\n\ncar.wheel = 2\ncar.speed = () => console.log('very fast')\n\ncar1.speed()  // very fast\ncar2.speed()  // very fast\ncar3.speed()  // fast\ncar4.speed()  // very fast\nconsole.log(car1) // {__proto__: {speed: (), wheel: 2}}\nconsole.log(car2) // {__proto__: {speed: (), wheel: 2}}\nconsole.log(car3) // {wheel: 3}\nconsole.log(car4) // {wheel: 2}\n</code></pre>\n<p>由上面的例子可以觀察</p>\n<ol>\n<li>\n<p>car1 和 car2 皆由Object.create(car)所建立，所以兩者的prototype皆為car；所以在car修改wheel和speed後，兩者皆輸出very fast。</p>\n</li>\n<li>\n<p>car3 和 car4 使用Object.assign建立，其中car3的目標物件為一個新的物件，而car4的目標物件為car；所以當car被修改時car3不受影響，反之，car4則隨car的修改而改變。</p>\n</li>\n<li>\n<p>car1和car2對比car3的差異在於，使用Object.create所建立的物件為prototype指向car，而使用Object.assign所建立的物件則是直接將car的屬性值複製到目標物件中，如範例中的空物件。</p>\n</li>\n</ol>\n<p>實際上執行上面的#code 時可能會觀察到奇怪的狀況，可以參考<a href=\"\">A special output of Chrome console.log Object</a></p>\n"},"__N_SSG":true}